#include "qcommon.h"

/* size: 9x9x2
Stats (value/axis):
~~~~~~~~~~~~~~~~~~~
	|	-0.5	0.0		0.5
----+-----------------------
 X	|	3		15		4
 Y	|	4		15		4
 Z	|	4		16		4
*/

enum {
P0_000000,

P0_147621,
P0_162460,
P0_238856,
P0_262866,
P0_295242,
P0_309017,
P0_425325,
P0_442863,
P0_500000,
P0_525731,
P0_587785,
P0_681718,
P0_688191,
P0_716567,
P0_809017,
P0_850651,
P0_864188,
P0_951056,
P0_955423,
P1_000000,

M0_147621,
M0_162460,
M0_238856,
M0_262866,
M0_295242,
M0_309017,
M0_425325,
M0_442863,
M0_500000,
M0_525731,
M0_587785,
M0_681718,
M0_688191,
M0_716567,
M0_809017,
M0_850651,
M0_864188,
M0_951056,
M0_955423,
M1_000000
};


static const float values[] =
{
0.000000,

0.147621,
0.162460,
0.238856,
0.262866,
0.295242,
0.309017,
0.425325,
0.442863,
0.500000,
0.525731,
0.587785,
0.681718,
0.688191,
0.716567,
0.809017,
0.850651,
0.864188,
0.951056,
0.955423,
1.000000,

-0.147621,
-0.162460,
-0.238856,
-0.262866,
-0.295242,
-0.309017,
-0.425325,
-0.442863,
-0.500000,
-0.525731,
-0.587785,
-0.681718,
-0.688191,
-0.716567,
-0.809017,
-0.850651,
-0.864188,
-0.951056,
-0.955423,
-1.000000
};

static const byte encoded[] =
{
	M0_525731, P0_000000, P0_850651,
	M0_442863, P0_238856, P0_864188,
	M0_295242, P0_000000, P0_955423,
	M0_309017, P0_500000, P0_809017,
	M0_162460, P0_262866, P0_951056,
	P0_000000, P0_000000, P1_000000,		//5: 0,0,1
	P0_000000, P0_850651, P0_525731,
	M0_147621, P0_716567, P0_681718,
	P0_147621, P0_716567, P0_681718,
	P0_000000, P0_525731, P0_850651,
	P0_309017, P0_500000, P0_809017,
	P0_525731, P0_000000, P0_850651,
	P0_295242, P0_000000, P0_955423,
	P0_442863, P0_238856, P0_864188,
	P0_162460, P0_262866, P0_951056,
	M0_681718, P0_147621, P0_716567,
	M0_809017, P0_309017, P0_500000,
	M0_587785, P0_425325, P0_688191,
	M0_850651, P0_525731, P0_000000,		//
	M0_864188, P0_442863, P0_238856,
	M0_716567, P0_681718, P0_147621,
	M0_688191, P0_587785, P0_425325,
	M0_500000, P0_809017, P0_309017,
	M0_238856, P0_864188, P0_442863,
	M0_425325, P0_688191, P0_587785,
	M0_716567, P0_681718, M0_147621,
	M0_500000, P0_809017, M0_309017,
	M0_525731, P0_850651, P0_000000,		//
	P0_000000, P0_850651, M0_525731,
	M0_238856, P0_864188, M0_442863,
	P0_000000, P0_955423, M0_295242,
	M0_262866, P0_951056, M0_162460,
	P0_000000, P1_000000, P0_000000,		//32: 0,1,0
	P0_000000, P0_955423, P0_295242,
	M0_262866, P0_951056, P0_162460,
	P0_238856, P0_864188, P0_442863,
	P0_262866, P0_951056, P0_162460,
	P0_500000, P0_809017, P0_309017,
	P0_238856, P0_864188, M0_442863,
	P0_262866, P0_951056, M0_162460,
	P0_500000, P0_809017, M0_309017,
	P0_850651, P0_525731, P0_000000,		//
	P0_716567, P0_681718, P0_147621,
	P0_716567, P0_681718, M0_147621,
	P0_525731, P0_850651, P0_000000,		//
	P0_425325, P0_688191, P0_587785,
	P0_864188, P0_442863, P0_238856,
	P0_688191, P0_587785, P0_425325,
	P0_809017, P0_309017, P0_500000,
	P0_681718, P0_147621, P0_716567,
	P0_587785, P0_425325, P0_688191,
	P0_955423, P0_295242, P0_000000,		//
	P1_000000, P0_000000, P0_000000,		//52: 1,0,0
	P0_951056, P0_162460, P0_262866,
	P0_850651, M0_525731, P0_000000,		//
	P0_955423, M0_295242, P0_000000,		//
	P0_864188, M0_442863, P0_238856,
	P0_951056, M0_162460, P0_262866,
	P0_809017, M0_309017, P0_500000,
	P0_681718, M0_147621, P0_716567,
	P0_850651, P0_000000, P0_525731,
	P0_864188, P0_442863, M0_238856,
	P0_809017, P0_309017, M0_500000,
	P0_951056, P0_162460, M0_262866,
	P0_525731, P0_000000, M0_850651,
	P0_681718, P0_147621, M0_716567,
	P0_681718, M0_147621, M0_716567,
	P0_850651, P0_000000, M0_525731,
	P0_809017, M0_309017, M0_500000,
	P0_864188, M0_442863, M0_238856,
	P0_951056, M0_162460, M0_262866,
	P0_147621, P0_716567, M0_681718,
	P0_309017, P0_500000, M0_809017,
	P0_425325, P0_688191, M0_587785,
	P0_442863, P0_238856, M0_864188,
	P0_587785, P0_425325, M0_688191,
	P0_688191, P0_587785, M0_425325,
	M0_147621, P0_716567, M0_681718,
	M0_309017, P0_500000, M0_809017,
	P0_000000, P0_525731, M0_850651,
	M0_525731, P0_000000, M0_850651,
	M0_442863, P0_238856, M0_864188,
	M0_295242, P0_000000, M0_955423,
	M0_162460, P0_262866, M0_951056,
	P0_000000, P0_000000, M1_000000,		//84: 0,0,-1
	P0_295242, P0_000000, M0_955423,
	P0_162460, P0_262866, M0_951056,
	M0_442863, M0_238856, M0_864188,
	M0_309017, M0_500000, M0_809017,
	M0_162460, M0_262866, M0_951056,
	P0_000000, M0_850651, M0_525731,
	M0_147621, M0_716567, M0_681718,
	P0_147621, M0_716567, M0_681718,
	P0_000000, M0_525731, M0_850651,
	P0_309017, M0_500000, M0_809017,
	P0_442863, M0_238856, M0_864188,
	P0_162460, M0_262866, M0_951056,
	P0_238856, M0_864188, M0_442863,
	P0_500000, M0_809017, M0_309017,
	P0_425325, M0_688191, M0_587785,
	P0_716567, M0_681718, M0_147621,
	P0_688191, M0_587785, M0_425325,
	P0_587785, M0_425325, M0_688191,
	P0_000000, M0_955423, M0_295242,
	P0_000000, M1_000000, P0_000000,		//104: 0,-1,0
	P0_262866, M0_951056, M0_162460,
	P0_000000, M0_850651, P0_525731,
	P0_000000, M0_955423, P0_295242,
	P0_238856, M0_864188, P0_442863,
	P0_262866, M0_951056, P0_162460,
	P0_500000, M0_809017, P0_309017,
	P0_716567, M0_681718, P0_147621,
	P0_525731, M0_850651, P0_000000,		//
	M0_238856, M0_864188, M0_442863,
	M0_500000, M0_809017, M0_309017,
	M0_262866, M0_951056, M0_162460,
	M0_850651, M0_525731, P0_000000,		//
	M0_716567, M0_681718, M0_147621,
	M0_716567, M0_681718, P0_147621,
	M0_525731, M0_850651, P0_000000,		//
	M0_500000, M0_809017, P0_309017,
	M0_238856, M0_864188, P0_442863,
	M0_262866, M0_951056, P0_162460,
	M0_864188, M0_442863, P0_238856,
	M0_809017, M0_309017, P0_500000,
	M0_688191, M0_587785, P0_425325,
	M0_681718, M0_147621, P0_716567,
	M0_442863, M0_238856, P0_864188,
	M0_587785, M0_425325, P0_688191,
	M0_309017, M0_500000, P0_809017,
	M0_147621, M0_716567, P0_681718,
	M0_425325, M0_688191, P0_587785,
	M0_162460, M0_262866, P0_951056,
	P0_442863, M0_238856, P0_864188,
	P0_162460, M0_262866, P0_951056,
	P0_309017, M0_500000, P0_809017,
	P0_147621, M0_716567, P0_681718,
	P0_000000, M0_525731, P0_850651,
	P0_425325, M0_688191, P0_587785,
	P0_587785, M0_425325, P0_688191,
	P0_688191, M0_587785, P0_425325,
	M0_955423, P0_295242, P0_000000,	//
	M0_951056, P0_162460, P0_262866,
	M1_000000, P0_000000, P0_000000,	//143: -1,0,0
	M0_850651, P0_000000, P0_525731,
	M0_955423, M0_295242, P0_000000,	//
	M0_951056, M0_162460, P0_262866,
	M0_864188, P0_442863, M0_238856,
	M0_951056, P0_162460, M0_262866,
	M0_809017, P0_309017, M0_500000,
	M0_864188, M0_442863, M0_238856,
	M0_951056, M0_162460, M0_262866,
	M0_809017, M0_309017, M0_500000,
	M0_681718, P0_147621, M0_716567,
	M0_681718, M0_147621, M0_716567,
	M0_850651, P0_000000, M0_525731,
	M0_688191, P0_587785, M0_425325,
	M0_587785, P0_425325, M0_688191,
	M0_425325, P0_688191, M0_587785,
	M0_425325, M0_688191, M0_587785,
	M0_587785, M0_425325, M0_688191,
	M0_688191, M0_587785, M0_425325
};


vec3_t bytedirs[NUMVERTEXNORMALS];

void InitByteDirs ()
{
	const byte *s = encoded;
	float *d = bytedirs[0];
	for (int i = 0; i < NUMVERTEXNORMALS*3; i++)
		*d++ = values[*s++];
}
