// Autogenerated file: do not modify

typedef struct {
	int		struc_size;
	int		api_version;
	void	(*_Cmd_AddCommand) (char *name, void(*func)(void));
	void	(*_Cmd_RemoveCommand) (char *name);
	int	(*_Cmd_Argc) (void);
	char*	(*_Cmd_Argv) (int i);
	char*	(*_Cmd_Args) (void);
	cvar_t*	(*_Cvar_Get) (char *name, char *value, int flags);
	void	(*_Cvar_GetVars) (const cvarInfo_t *vars, int count);
	cvar_t*	(*_Cvar_Set) (char *name, char *value);
	cvar_t*	(*_Cvar_SetValue) (char *name, float value);
	cvar_t*	(*_Cvar_SetInteger) (char *name, int value);
	char*	(*_Cvar_VariableString) (char *name);
	float	(*_Cvar_VariableValue) (char *name);
	int	(*_Cvar_VariableInt) (char *name);
	float	(*_Cvar_Clamp) (cvar_t *cvar, float low, float high);
	float	(*_Cvar_ClampName) (char *name, float low, float high);
	void*	(*_Z_Malloc) (int size);
	void	(*_Z_Free) (void *ptr);
	void*	(*_CreateMemoryChain) (void);
	void*	(*_AllocChainBlock) (void *chain, int size);
	void	(*_FreeMemoryChain) (void *chain);
	void*	(*_Hunk_Begin) (int maxsize);
	void*	(*_Hunk_Alloc) (int size);
	int	(*_Hunk_End) (void);
	void	(*_Hunk_Free) (void *buf);
	int	(*_Sys_Milliseconds) (void);
	void	(*_Com_Printf) (const char *str, ...);
	void	(*_Com_DPrintf) (const char *str, ...);
	void	(*_Com_WPrintf) (const char *str, ...);
	void	(*_Com_FatalError) (const char *fmt, ...);
	void	(*_Com_DropError) (const char *fmt, ...);
#ifdef _WIN32
	int	(*_win32ExceptFilter2) (void);
#endif
	void	(*_appUnwindPrefix) (const char *fmt);
	void	__declspec(noreturn)	(*_appUnwindThrow) (const char *fmt, ...);
	bool	(*_FS_FileExists) (char *filename);
	basenamed_t*	(*_FS_ListFiles) (char *name, int *numfiles, int flags);
	int	(*_FS_LoadFile) (char *name, void **buf);
	void	(*_FS_FreeFile) (void *buf);
	char*	(*_FS_Gamedir) (void);
	void	(*_FS_CreatePath) (char *path);
	void	(*_FS_CopyFile) (char *src, char *dst);
	void	(*_FS_CopyFiles) (char *srcMask, char *dstDir);
	void	(*_FS_RemoveFiles) (char *mask);
	bool	(*_MatchWildcard) (const char *name, const char *mask);
	bool	(*_MatchWildcard2) (const char *name, const char *mask, qboolean ignoreCase);
	qboolean	(*_Vid_GetModeInfo) (int *width, int *height, int mode);
	void	(*_Vid_MenuInit) (void);
	int	(*_ImageExists) (char *name, int stop_mask);
	void	(*_LoadPCX) (char *name, byte **pic, byte **palette, int *width, int *height);
	void	(*_LoadTGA) (char *name, byte **pic, int *width, int *height);
	void	(*_LoadJPG) (char *name, byte **pic, int *width, int *height);
	qboolean	(*_WriteTGA) (char *name, byte *pic, int width, int height);
	qboolean	(*_WriteJPG) (char *name, byte *pic, int width, int height, qboolean highQuality);
	bspfile_t*	(*_LoadBspFile) (char *filename, bool clientload, unsigned *checksum);
	void	(*_CM_BoxTrace) (trace_t *tr, vec3_t start, vec3_t end, vec3_t mins, vec3_t maxs, int headnode, int brushmask);
	void	(*_CM_TransformedBoxTrace) (trace_t *tr, vec3_t start, vec3_t end, vec3_t mins, vec3_t maxs, int headnode, int brushmask, vec3_t origin, vec3_t angles);
	void	(*_CM_TransformedBoxTrace2) (trace_t *tr, vec3_t start, vec3_t end, vec3_t mins, vec3_t maxs, int headnode, int brushmask, vec3_t origin, vec3_t *axis);
	int	(*_CM_BrushTrace) (vec3_t start, vec3_t end, int *brushes, int maxBrushes);
	int	(*_CM_RefineBrushTrace) (vec3_t start, vec3_t end, int *brushes, int numBrushes);
#ifdef _WIN32
	void*	(*_Vid_CreateWindow) (int width, int height, qboolean fullscreen);
	void	(*_Vid_DestroyWindow) (qboolean force);
#else
	void	(*_Vid_NewWindow) (int width, int height);
#endif
} refImport_t;

extern refImport_t ri;

