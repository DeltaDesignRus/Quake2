4.00 Changes

- intensity, saturation, vid_gamma, vid_fullscreen -> r_...
- r_gamma = 1/vid_gamma
- nosound = !s_initsound

Comments:
? when filename.??? appeared in this log, this means "tga"/"jpg"/"pcx"/"wal"
- wildcards are case-insensitive and can be in form: "*", "*.*" (same as "*"), "*text", "text*", "text*text"
  or "*text*"; multiple wildcards can be separated with commas (','); if path specified, multi-wildcard syntax
  should be in a following form:
    "path/path.../wildcard1,wildcard2,...wildcard"
- ip mask: 4 elements, delimited with '.'; element can be:
  - "NNN" - specified number
  - "AAA-BBB" - any number in range
  - "*" - any number (same as "0-255")
  All-IP mask is "*.*.*.*" or "0-255.0-255.0-255.0-255"

1. REF_GL (old ??)
~~~~~~~~~~~~~~~~~~
- extended view area for working with large maps (variable "gl_zmax" controls clipping of view range)
- improved vid_restart performance (Win32)
- fixed cursor appearance when in fullscreen mode (Win32)
- fixed crash of using sprite models when one frame is not found
- implemented environment mapping simulation on transparent objects (can be disabled with "gl_winrefl 0";
  reflection taken from /* "env/<skyname>winrefl.???" or */ "env/defrefl.???")
- changed appearance of "r_speeds" output
- support of the Kingpin SURF_ALPHA surface flag
- hardware gamma control (can be disabled with "set r_ignorehwgamma 1"); changes applied without "vid_restart" (Win32)
- support for GL_S3_s3tc and GL_ARB_texture_compression (can be disabled with "set gl_ext_compressed_textures 0")
# improved "imagelist" command: now it shows texture internal formats and info about scrap
- "gl_console_only" variable: when "1", no graphical information displayed and display forced to full console
  (needs "vid_restart" to activate)
- support of loading 8(grayscale)/24/32-bit tga and 24-bit jpg textures instead of 8-bit wal or pcx files
# support for semi-transparent (has alpha >0 and <1) HUD images (e.i. Quake3 crosshairs)
# improved speed in "r_lightmap=1" mode; side effect: r_fullbright and gl_showtris are now
  works with multitexturing enabled (gl_showtris requires either r_lightmap or r_fullbright enabled)
# "r_showtris 2" will shows triangles with enabled Z-buffer
- "r_lightmap 2" solarizes lightmaps (as in Quake3)
  "r_lightmap 3" inverses saturation of lightmaps on map loading
  (both requires "vid_restart" to activate)

2. REF_SOFT
~~~~~~~~~~~
- changed appearance of "r_speeds" and "r_dspeeds" output
- fixed crash of using sprite models when one of frame images is not found
- "sw_console_only" variable (see "gl_console_only" comments for details)
- support of loading 24/32-bit tga and 24-bit jpg textures instead of 8-bit wal or pcx files (use
    "set sw_prefer8bittex 1" if you want to load TGA/JPG only when 8-bit texture is not found; WARNING: when
    playing Kingpin maps, you should set sw_prefer8bittex to 0 or erase Kingpin env/*.pcx files (different palette!))
- support (visually buggy?) for Kingpin SURF_ALPHA surface flag

3. IMPROVEMENTS
~~~~~~~~~~~~~~~
- demomap can be called without ".dm2" extension (added by default)
- added support of reading/listing player models from pak files
- improved a ladder descending
- added unhandled exception filter, which will restore screen/mouse/sound parameters if game crashes and logs error ("crush.log")
- logging developer messages to "debug.log" when "developer" is set to 2
- "host_speeds" -> "com_speeds", better output
- timedemo:
  - timedemo <n> -- gather timing statistics with rendering <n> frames per (demo-)server frame
  - added min_fps stats
- ref_gl and ref_soft are now statically linked with quake2
- no autosaves in deathmatch mode
- if sound file not found, game doesn't try to load it every time it must appear
- improved look of "player setup" menu
- improved "set game directory"
- ability to reverse sound channels; controllable with "s_reverse_stereo"
- can use skins without icon ("*_i.???") file -- skin shound have name "skn_*.???"; side effect: even when
  skin icon exists, it will be ignored

4. FIXES
~~~~~~~~
- on game change:
  - saving current config
  - reconfiguration from mod's default.cfg, config.cfg and autoexec.cfg
- saving aliases to config
- "default.cfg" executed only when "config.cfg" is not found; to upgrade old config files user should:
  1) exec default.cfg
  2) unbindall
  3) reset *
  4) exec config.cfg
- bug with menu spin control (crush when curvalue > maxvalue)
- removed calling "-alias" EVERY time key depressed
- disabled mouse acceleration
- fixed collision detection code to prevent from "blocked inside the opening door" and some other bugs
- fixed "WSAECONRESET" error for Win2K (server was crushed when one client exits game)
- demos:
  - allowed cheatvars (timedemo, r_lightmap ...) for demos, recorded from deathmatch
  - disabled "set <var> <value>" commands from recorded demos
- allowed cheatvars when server started with "cheats 1"
- commandline: removed '-' parsing, added support for quotes
- cinematic: ability to stop with any key (was incorrect when playing sequence of few cinematics)
- menu: allowed binds to all keys (except ESC and "~")
- better work with large FPS

5. ADDONS
~~~~~~~~~
Cvar system
-----------
- command "add":
  add <var_name> <inc> [<min> <max> [w][f]]
    - var_name must exists and be writeable
    - inc may be >0 or <0
    - min<max
    - if "w" is specified, when dest>max it will =min, if dest<min it =max (wrapping)
    - if "w" is NOT specified, when dest>max dest=max, when dest<min dest=min (limit)
    - if "f" ("force") specified and variable is not found, it will be created (error message otherwise)
- command "scale <varname> <scale>" will multiply variable value by scale
- command "toggle <varname>" will set variable to 0 if var != 0 or set to 1 otherwise
- command "cycle [-r] <varname> <v[1]> <v[2]> ..." - set variable to v[i+1] if it is matched to v[i];
    (if "-r" specified -- reverse order, i.e. set to v[i-1] when matched with v[i]); if no matches found - set to
    v[1]; if matched with last value - set to 1st (i.e. cycle variable values within value list)
- command "cvarlist" - added parameter:
  cvarlist [mask]          -- will display only variables, which names matched wildcard
- "set[a|u|s] <variable> <value>", "set <variable> <value> [a|u|s]" (archive|userinfo|serverinfo)
- alias for "set" command: "a=b" internally replaced with "set a b"
- "reset <mask>" - set value of all archive cvars which names are matched mask to default

File system
-----------
- "loadpak <pakname>[.pak]"
  "loadpak <wildcard>"
    - pakname must be relative to a current game directory
    - pakname will be automatically unloaded when gamedir changed
    - to load pak from other game use "loadpak ../game/pakname.pak" syntax
- "unloadpak <pakname>[.pak]"
  "unloadpak <wildcard>"
    - will be unloaded 1st pak in searchpaths (see "path" command), which name ends with "/pakname"
    - if unloaded pak from baseq2 directory, it will not be loaded automatically when game changed
- "cat <filename>" - display contents of file
- "type <filename>" - display info about file
- improved "dir" console command (reformatted, listing paks)
- added support of zip (pk3) pak files (should also have ".pak" extension; to load ".pk3" files add to "autoexec.cfg"
  following line: "loadpak *.pk3")
- loading unlimited number of paks with any names (all internally lowercased)

Console/Menu
------------
- improved console command complementation:
  - command/variable/alias list when partial match
  - complete "map " / "demomap " with a list of available maps/demos
  - complete "variable_name " with its value
  - complete "alias" with its name / value
  - complete "bind key" with its binding
  - when pressing TAB twice (complete same thing twice), will appear popup with variants (if no more than 16 selections)
- console edit:
  - Home / End - move cursor to the line start/end
  - Crtl-Home / Ctrl-End will rewind console to begin/end of buffer
    (old behaviour - same, but without Ctrl)
  - Left / Right - move cursor one char left/right
  - Ctrl-Left / Ctrl-Right - move cursor one word left/right
  - Del - delete char under cursor
  - Ctrl-Del - clear text from cursor to the end of line
  - Backspace - delete char before cursor
  - Ctrl-Backspace - delete word before cursor
  - any char - insert text
- changed command history code to prevent appearing of empty lines and duplicates
- console text colorizing in Q3-manner: ^0-^7 will change color (black-white); colored output can be disabled
    with "set con_colortext 0"
- reformatted console output; word-wrap may be controlled with "set con_wordwrap 0|1"
- menu navigations:
  - added menu navigation and console scrolling with mouse
  - added support of home/end keys; disabled menu auto-wrapping
  - scrolling of long menus

Keyboard
--------
- new keys:
  - right-side keys RAlt and RCtrl (Alt and Ctrl are left-side)
  - F13-F24
  - CapsLock, NumLock, ScrLock
  - UnkXX (most other keys)
- added names for keys:
  - ';' is Semicolon
  - ',' is Comma
  - '*' is KP_Star (extended keyboard key)
- implemented keyboard autorepeat
- added binding to "Ctrl+Key" and "Alt+Key"

Configuration
-------------
- added "binds.lst" file fith the following line format:
  1) "bind_cmd" "menu_text"
  2) "bind_cmd"                (will be shown in menu with the same name)
  3) "" "Delimiter text"       (delimiter, centered)
  4) "" ""                     (empty line)
  (Up to 64 lines of text, last line MUST be finished with CR/LF; almost HalfLife style)
- command "bindlist" - added parameter:
  bindlist [action mask]   -- will display only binds, which actions are matched wildcard
- unbind <mask> ; "unbind *" == "unbindall"
- command "unalias <mask>" - remove all matched aliases
- cvar "cfgfile" -- may be set from command line; default - "config.cfg"
- command "writeconfig filename[.cfg]" - write settings to file

- command "wait": added parameter <num_frames>; default 1
- added "players/model.lst": this file contains names of models, which gender should be female (always female for
  "female" and "crakhor")
- added "sound/materials.lst" - contains sound description depended of texture name (almost HalfLife style)
- surface footstep sounds depended on material (Kingpin, "materials.lst")
- "screenshot [-silent] [-levelshot] [-no2d] [-nogamma] [-jpeg] [<filename>]"
  "-levelshot" will create screenshot 256x256 as "levelshots/<mapname>.???"
  "-nogamma" will skips gamma correction for image
- support for "//..." and "/*...*/" comments
- support for quote doubling: 'echo "help ""me"""' will display 'help "me"'

Server
------
- ban system for client IP (not works with IPX clients)
  - "ban <userid>"    - ban player and add to ban list
  - "banip <ip-mask>" - ban all players matched to mask and add mask to ban list
  - "banlist"         - show list of bans
  - "banremove <n>"   - remove line #n from list
  - "banremove <mask>"- remove mask from list

Debugging
---------
- "r_surfinfo" variable: when value is non-zero, displaying info about maps surface under crosshair
  (&2 -> no entities, &4 -> any contents)
- "r_drawfps" variable: display FPS when it is set
- "r_playerpos" variable: when it is set to "1", player (spectator) world coordinates are shown
- "r_sfx_pause 1" stops particles/fx; "r_sfx_pause 2" also disables particle/fx creation
- "fs_debug" variable: when non-zero, most file system activity will be displayed on console
- "cmd_debug" var: &1 - display ExecString, &2 - display AddText
- "cl_showbboxes 1" will display object bounding boxes from client info


?????????
---------
- "r_saturation" variable: default 1 (all textures and lightmaps - as is), 0 - full grayscale
- extended network protocol (fully compatible with old-version server/client). May be disabled on client
  side with "set cl_extprotocol 0" or on server side with "set sv_extprotocol 0". Extensions:
  - surface-dependent footstep sounds (server-side)
  - surface-dependent bullet hit sounds (client-side)
  - camper sounds (server-side)
  - falling sounds (server-side)
  - customised rail trail
  * side effect: demos will crush server, when played with original Quake2; to record compatible demos, just
    use cl_extprotocol=0 or sv_extprotocol=0
?(not finished) new particle/fx system; can be disabled with "cl_newfx 0"
- crosshairs:
  - unlimited number of crosshairs; must be named "pics/ch%d.???"; when trying to set crosshair,
    that does not exist, crosshair will be set to 0 (no crosshair)
  - added cvar "crosshaircolor"; value = [0..7] (0 - black, 1 - red, 2 - green, 4 - blue, 7 - white)
  - changing crosshair shape and color from the options menu
- browsing levelshots in "start server" menu (accessible via menu or "menu_dmbrowse"); displaying it while map loading
- screenshots in savegames: display in save/load game menu, display while map loading
- "cl_draw2d 0" removes HUD
- timescale:
  - sound pitch affected by timescale (DirectSound only, restart required)
  - support for low timescale (was not able to perform frames with scaled time less than 1 ms)
- added mouse support via DirectInput (activated with "set in_mouse 2", default)
- third-person view: activated with "cl_3rd_person 1"
- intro playback:
  - removed from "toggleconsole" command
  - on startup, will be displayed only cinematics
  - to disable intro on startup, use "nointro 1" in commandline
- dedicated server:
  - to disable auto-startup "dedicated_start" alias, use "nointro 1"
- main executable command line:
  - to change cvar use "-var=value"
  - to set cvar, known at the time of initialization, to "1", use "-var" (same as "-var=1")
  - to execute commands, use "-command [arguments]"
  - example: quake2 -nosound -deathmatch=1 -map q2dm1 -echo "hello world!"
- commands "lookdown <angle>" and "lookup <angle>"

6. MISFEATURES
~~~~~~~~~~~~~~
- no negative dlights in renderer (can be emulated with multiplicative dlights ?)

7. API (internals)
~~~~~~~~~~~~~~~~~~
Memory management
-----------------
- replaced Z_TagMalloc() in gameimport_t with NewTagMalloc(), with reserves (size+1) bytes.
    We should make 1 more byte for Z_Malloc() & Z_TagMalloc() when it is called
    from "gi->" (gamex86.dll) - we cannot control bugs in third-party mods, but
    at least "dirty" reads entities in buffer = sizeof(ents) and adds 1 zero byte
    after (ASCIIZ) - memory overrun! (so, we should reserve 1 byte for buggy mods).

Miscellaneous
-------------
- FS_LoadFile() will load file into a buffer of size (filelength+1) with added zero byte
- Com_WPrintf() will print message with warning color and log when developer=2
