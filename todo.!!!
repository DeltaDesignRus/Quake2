! make NEW_PROTOCOL_VERSION: send with NEW_PROTOCOL_ID, client warning when client older than server and disabling
  ext protocol for client
? check for hook ability of precicious PMove (more than 1/8)
! console: use "SetConsoleCtrlHandler()" to hook exit with "x" or Ctrl-C
! command "banchat": disable chat of concrete IP
- remove IPX protocol from win32 code
? eliminate BigShort(MASTER|SERVER_PORT) (sv_cmds.c, cl_main.c) -- only one thing, for which BigXxx() is used (big-endian numbers)
! check bug: dirty, map mine4, laser cannon -- when shoot rock, invisible entity painted (should not be entity at all,
  "hall of mirrors" effect appears); check with baseq2 (sp+deathmatch); when do it 2nd time (wall respawned in DM) - all OK
! spec for map script
- colorize server list (old/new-only/cheats/full) (make legend ? or make table with some attributes: server-name, map-name, players,
  cheats, protocol (old,both,new))
- sv_extProtocol: "2" - force (no clients without this); if map.type != map_q2 -> force too; if cl_extProtocol=0, but server
  requires it, connect with extProtocol (should add sv_extProtocol to serverinfo + check it on a client side + detect non-q2 maps)
- scoreboard: add blendrect (?) (try to improve look anyway ...)
! prediction errors:
  - zaero, plasma shield (jump + shield in down direction - movement lock when landed on shield);
    original Q2 works incorrect too, but in a different way: can pass through shield
  ! lerp entity angles (may remove bug with locking inside opening door)
  - other: find "prediction" in this document
? make "r_consoleOnly" work without "vid_restart"
- r_speeds -> r_times + r_stats

----------------------------------------

! map "trainstation": very slow (10-20ms) server (AMD K6-2+) (slow SV_AreaEdicts(), >800 times/sv_frame)
! unpack PVS in LoadBsp(); use unpacked version in renderer and CM_InPVS() etc.

- if Win32 can't get keyboard focus, "set r_fullscreen 0" (as Unreal2)
BINDS:
  - bind key "action1"|onrelease "action2" (Unreal-like)
  ? bind key+Alt or altbind (?)
  ? bindtmp, aliastmp (not stered in config ?)
SAVEGAMES:
  ? show game time (a-la Anachronox)
  - quicksave: save to a few (4?) slots
  - sort savegames by time, ignore slots; any number of savegames (?)
  ? qcommon.h: NO_SAVEGAMES - remove save/load game code
  ? gzip file
KINGPIN:
  - fire/steam
HALFLIFE:
  // from pm_shader.c
  - step sound: volume = 0.2/0.5 (walk/run) (+ add slowwalk -- crouched)
  - if moving slow - no step sounds
  - walking/running: step sound length = 400/300; water = 600; ladder = 350
  - stop when |velocity| less than STOP_EPSILON==0.1 (friction)

CAMERA:
  - interpolate camera 1st/3rd person change

TRACE:
  ? speedup ClipToEntities() (client/server/ref_gl): COMPARE only with entities in range (start - trace.endpos)
    (trace.endpos frequently updated); can sort ents by distance (find a list of potentially collided ents, sort
    by coord and collide + update collision limits with additional refining following traces)
    SUMMARY:
    1) sort potentially touchable entities with MIN distance (dist(ent,start)-ent.rad (rad??)): 1st -- nearest
       end=max_dist
    2) loop: if (dist(ent)>end) break; Trace(ent); if (collide) end=dist(ent);
    NOTE: cannot TRACE to (start - trace.endpos) - will produce different trace.frac
    +) add something like ent.worldMatrix in client/server prediction, call BoxTrace() instead of TransformedBoxTrace() when true;
       for alias models: make origin=0,angles=0,box=mins+origin,maxs+origin (make separate "trace" function for this (clip line
       with AABB) ?)
  - speedup detection of "tr.fraction != 1" - stop on 1st collision
  - TransformedBoxTrace: replace (headnode,origin,angles) with entity; make HeadnodeForBox() -> tempEntity;
    cache/update ent.angles->ent.axis ! (in renderer: ClipToEntities() -- use TransformedBoxTrace; send to renderer axis, not angles
    (check how this will affects left-hand weapon model))
  ? try something like AreaEdicts() for client trace code

- console: "nochat" - disable messages from game (engine/developer messages only); may be, display game messages
  in notify area only ? (this will require console extensions, 2nd console etc.)
- improve (speedup) MSG_WriteDir() with tables
- cvar commands: "push", "pop"; 2 variants:
  a) push <var> , pop <var>     -- each cvar have its ovn stack; "push $a;push $b;pop a;pop b" will not change vars
     (needs "save"/"restore" names for commands ("save" is already used) ??)
  b) push <value> , pop <var>   -- global cvar stack; "push a;push b;pop a;pop b" will exchange "a" and "b" values

MODEL SYSTEM:
- when no skin for model, use any (?) other; if no skins - use different (default) model
- scan for models on initialization; check its gender, type (q2,hl,q3 etc.), skin list; create animation system
- needs ability to specify model gender without "models.lst" file
? player setup: add model type/gender filter
? make pmove player bounds to be taken from the actual player model (server option (?), requires extptotocol for
  correct prediction)
? create (compressed ?) model cache
- ability to detect unused models/skins (for unloading from renderer)
- client entity code should work with this_model_system objects, these objects should link to renderer models (move refEntity_t to
  model system)

DINPUT MOUSE BUGS/NOTES:
- in_initmouse -- needed?
- add MOUSE4 ?
- check DirectInput8
! add mouse cursor hiding (not always disappear with DInput after deactivate+activate); now to hide cursor: "in_mouse 1;in_mouse 2"

? command for hiding files from pak: "pakhide <pakname> <filemask>" - non-reversive command, changes (be sure non-destructive
  for alpha-sort names) files info so it will not found on next requests
? improve camper detection: track player position every ... 5 sec (??) for a 1+n minute period and set "camper" to true
  if current player position is near (tune this distance !) to history[now-1min .. now-2min]
- menu option: priority (win_priorityBoost) -- for Win2K+

BSP:
? KP map scaling (auto) -- needs force extprotocol
? mirrored maps
? commands spmap, devmap etc. (set "cheats" and "deathmatch" vars before SV_Map())
- advanced "map" command syntax: add scaling and mirroring (separate scale each axis, mirror - X *= -1 ?)
  "map [-dev] [-sp] [-mirror] [-scale] <name>" (?!)
? Q1 map support (easier than HL; requires renderer ability to load textures from BSP)

*** BUGS ***
- 3rd person view: ground3_beta3, dist=300, enter dark place (near ladder) between street lamp and garage: garage
  door will disappear (server sends entity list depends on model origin, not vieworg)
- memory leak 4096 bytes (map rexro/discon/vid_res/STATS/beachassault/rexro/discon/vid_res/STATS)
- script comments stripper: removes '//' and '/* ... */' comments from each line (should remove from script only) AND
  '/*' will work as '//' when no corresponding '*/' (for example, cmd "map /*lightmap1" will work as "map ", but when mapname
  is quoted - works fine)

*! remove auto-demo start on quake loading (option? timeout? first run?)

! add materials: glass, grass, sand
? make atmospheric effects (some maps in kingpin and halflife does, Q3F too ...)
  (make surface-dependent raindrop sounds? (KP:main/sound/world/rain*.wav))

? ref_SOFT sprites: get sprite size not from md2, but from image dimensions (see new explosions ...); we can do it,
  because GL do this in this way

------------- API ----------------

? add Cmd_AddCommands(list,num), Cmd_RemoveCommands(list,num)
  - Cmd_AddCommands() may be implemented WITHOUT copying name, or just with using static cmdFunc_t for list
    (just insert into list, but add flags "do not free on remove")
  - macro CMD_ADD_COMMANDS(var) -> Cmd_AddCommands(var,sizeof(var)/sizeof(*var)) etc.
? add "Cmd_AddHidden()" - for server commands (cannot be completed/listed, but accessible)
  (or just implement with Cmd_AddCommand(), but use name prefix, which will be ignored for seaching/completion,
  but disables completion)
? Com_DWPrintf() -- same as Com_DPrintf(), but display only when "developer" != 0 (or "warnings" != 0 ??)

------------ MENUS ---------------

- place "download options" to another place (not "player setup", or to upper level: where model selection performed);
  make download options to be a bitfield
- when menu script will be implemented:
  - add developer submenus
  - add Half-Life-like screen action menus (semi-transparent rects with text; accessible with keyboard and mouse)

-------- CLIENT/SERVER -----------

- record demos: make .dm2 file to be gzipped (produce with command other than "record"?)
  (may use old command too: who wants to send demo to other players, may just un-gzip it)
? demos with full list of events (already: serverrecord);
  ! make player for this demos (total control over movement: move, chase, eye etc.)
? add support for moving ladders: when player on entity with ladder, move player within entity (example: map "mesto", helicopter)
  (seems, this is game code ...)
? improve speed of downloading: current - 1024K/1 sv_frame
  client: cl_parse.c :: CL_ParseDownload() - net_massege ;; SZ_Print(..,"nextdl")
  server: sv_user.c :: SV_NextDownload_f() - write_size=r (1024 max < MAX_MSGLEN)
? perform extended protocol checking by adding "[cl_]extprotocol" to userinfo
? server with long player names: replace all userinfo names with special names (va("\x01\x02%2d",id) etc.), and when game dll
  will try to display this name somewhere (check all API functions!), replace it with original name
  ! WANRING: check demo recording -- should display correct names (this is client-side, so - safe ?)
? SV_FindIndex() -- use hash tables ?
? server: if game_time is comparable (or greater than ?) with ref_time, need to Sleep(game_time) every frame between game
  frames (smooth FPS)
? CHECK: sv_user.c :: SV_ExecuteUserCmd() ("false")

--------- REF_GL (new) -----------

- R_RecursiveWorldNode():
  3) fog-in-leaf
  4) leaf-use-detailTex
- portals:
  - try software clipplane (1. add to frustum; 2. clip triangles)
  - add 2nd {viewcluster, leaf[].frame} set (1st for main scene, 2nd for portal) -- Q3 has recalculation of leaf visibility
    every frame twice, and without portal - once per few frames.
? place LoadMd2 outside ref_xxx and perform lovercase for a skin names
! fog occlusion (for global fog) -- implement it like sky (occluded surface -> sky surface, sky -> fog color);
  may look at Alice (additional clip plane to 4 frustum planes)

------------ SOUND ---------------

? make ladder sounds (if it is possible) - depends on ladder surface type (wood creak etc.)

? add hardware mixing (DirectSound), try DirectSound3D (or OpenAL, or own implementation ??)
  Maps with slow sound fx: beachassault (multiple barrel blast)

? fix stereo sound rotation (bad positioning)

- make camper sounds gender-sensitive; change sounds (get it from Thief II), but let old (current)
  system works with "sv_campersounds 2"
? spectator sounds (windy)
? try to move surface bullet sounds from client to server

------------ VIDEO ---------------

? remove non-transparent water vis bugfix from oldgl (add to new gl ?!)

- add WriteTGA compression; add support for top-to-bottom TGA loading
- PCX: own palette for each file (but: 255 is transparent ?)
? h/w gamma: check for valid gamma when read
- video config menu: make "reset to defaults" works correctly (Cvar_Reset() ??)
- CDS:
  - when mode cannot be changed, use current (with fullscreen available)
  - add support for "1024x768@70"-like strings (see UT2003 for ideas)

- add marks: bulletholes (?), explosion marks, blood (!), "cheesy shadow" (!), water ripple

- ref_console (Win32 console-mode application, no GDI/OpenGL) -- auto-use in dedicated server (should attach
  dedicated server to ref)
? change "gl_console_only" and "sw_console_only" to "r_consoleOnly"

- decompress visinfo for client (cmodel); share this with renderers (require to modify oldgl and soft)

? support for view-dependent LightForPoint()

-------------- FS ----------------

- "fs_debug 2": profile FS_LoadFile(), monitor cvar change and when set to 0 -> "loaded %d files %d bytes in %.2f seconds"
??!! zipped (??) file cache (controlled with cvar "fs_cacheSize" [Mb]) (can attach buffer to packFile_t struc)
? implement FS_ListFiles() / FreeNamedList() within a memory chains (not just linked list)
- add FS_FOpenFileEx(name, mode), where mode is READ/WRITE/OSREAD (no PAK support)/ZWRITE (gzip compression)
? FILE2 -> STREAM, isZipped -> funcRead / funcWrite / funcClose / funcOpen (??)

------------ COMMON --------------

- redo command line parser: remove COM_Argc/COM_Argv etc from common.c
? meminfo (see Alice) - renderer (hunks), z, chains etc. ???
? hunks -> chains; align blocks by 16 bytes (currently: msvcrt, 8)
? own memory manager (without malloc; use OS functions at low-lewel)

*? Z_DEBUG: make following (#ifdef Z_DEBUG)
  - #define Z_BlockMalloc(size) Z_TagMalloc(size,0)
  - #define Z_Malloc(size) Z_TagMalloc(size,0)
  - add "void *caller_addr" to zblock_t and fill it in Z_TagMalloc with a return address
    == "*((int*)first_param - 1)"
  - make checking memory in "z_stats" (show damaged block info's - size, caller address ...)
    anbd Z_Free()

? console command line parsing: add special chars (C-like '\"' etc.)

? make AllocChainBlock() will try to use free space of PREVIOUS blocks when current (last) is full

- make zip/* big-endian compatible; update to "zlib1.1.4"
? update JPEG code (new version)

!? add Python virtual machine (game library, inline map scripts)

------------- CVARS --------------

? cvarclear - clear all archive flags from cvars, which was not created with quake2 (created with "set <var> <value> a" command)
? cvar_mon varname [message]  - monitor cvar on screen (default message = varname)
? cvar_unmon varname  - stop monitor for cvar
? completion cvarnames after "set", "toggle", "add" (etc.) and "...$varname"
  (add flags for Cmd_AddCommand() - complete type: cvar, map, demo ... ???)
? make completion "dir"-like formatting + colorizing against char-marks (types)

------------- LINUX --------------

? check all "#pragma pack" places (gcc have ability to compile this)
- update video config menu
? loading Win32 mods (Wine)
- hardware gamma (see /usr/X11R6/bin/xgamma as example ...)
- LoadRefresh: "vid_ref->modified = false" when OK
- net.c: some funcs changed args netadr_t -> *netadr_t
