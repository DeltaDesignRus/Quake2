! NVIDIA: check bugs, described in bugs.txt (BK_EndFrame (!) and video playback (?))
? EF_BFG, some other - TRANSLUCENT -> shader (cl_ents.cpp)
- need ability to get shader script from memory (map script with builtin shaders; main engine will pass them to renderer)
  (EASY to implement ...)
? can do similar thing, using FindShader(name, scriptName) -- will create shader with "name", but using script/template "scriptName"
  - can use this for r_lightmap (?), f_fullbright (?), gl_showFillRate, gl_singleShader (!)
? aminMap with cross-blending (for sprites) -- combiners?
- bfg beams: try to find entity, which is damaged, and lerp beam dst to it (beam src should be lerped too)
- sprites:
  - should get time for shader from entity (entity.fxTime: use "refdef.time - entity.fxTime" as shader time)
  * shader: add flag "dependOnTime", when one of stages have *animMap, rgbGen/alphaGen wave with amp<>0 and freq<>0,
    deforms (more?), to allow multiple sprites to have independent animations (like "dependOnEntity" for shader);
    can mix different entities with "dependOnTime == true", only when these entities have the same fxTime;
    set "dependOnTime" to "true" when:
    * any tcmod
    * rgbGen wave, (entity, oneMinusEntity? -- dependOnEntity)
    * alphaGen wave, (entity, oneMinusEntity?)
    * numAnimTextures > 1
    * deform != autosprite[2]
  - how to use dependOnTime:
    * if ent.worldMatrix & (ent.time == world.time || !ent.dependOnTime) -> entityNum = WORLD
    ! may be, require to create dummy entity for beams etc
=============
- correct autoflare center
- gl_state.haveFullscreen3d -- change (may be, remove var)
=============
- replace Sys_Find() and Sys_MkDir() with FileSystemWin32.cpp, then can remove fs_win.cpp ...
=============
- cmd.cpp -> Commands.cpp (Core) & cbuf.cpp (qcommon)
  - SplitCmdline == TokenizeString, diff is 1. delim = '-', 2. delim = ';' (or ' ' ??!)
  - MacroExpand(), cmd_debug, CL_ForwardToServer() -> cbuf code; should parse comments in cfg files here
     too (remove them after FS_LoadFile(cfgfile) !?)
- DeltaEntity():
  - for new protocol try plib-like (dcc32) delta func; display compression ratio (may use old-style delta and
    measure compression for new-style for testing); best place for testing - client (here can test demos too)
  - can create DeltaCompress() and DeltaDecompress() functions for plib-style compression
  - if upgrade compression, should parse demos with
    a) original protocol b)ext protocol, but old-style delta
    c) ext protocol and new-style delta;  may be, change EXT_PROTOCOL_ID too (add version number)
- Q2 menu system: have a LOTS of menu items with callbacks == direct linking to cvar: on Init() reads value
  from cvar, on Modify() write value back to cvar; uses cvar->Clamp() on init
  ! can add text field, and flags QMF_CVAR -- will init menu item from cvar, update
    cvar when item changed (for slider - should specify base + scale)
