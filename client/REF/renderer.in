// called when the library is loaded
bool	Init (void);

// called before the library is unloaded
void	Shutdown (bool complete = false);

void	BeginRegistration (const char *map);
model_t* RegisterModel (const char *name);
image_t* RegisterSkin (const char *name);
image_t* RegisterPic (const char *name);
void	SetSky (const char *name, float rotate, vec3_t axis);
void	EndRegistration (void);

// frame
void	BeginFrame (float camera_separation);
void	RenderFrame (refdef_t *fd);
void	EndFrame (void);

// drawing
void	DrawGetPicSize (int *w, int *h, const char *name);	// will return (0, 0) if not found
void	DrawPic (int x, int y, const char *pic, int color = C_WHITE);
void	DrawStretchPic (int x, int y, int w, int h, const char *name);
void	DrawDetailedPic (int x, int y, int w, int h, const char *name);
void	DrawChar (int x, int y, int c, int color = C_WHITE);
void	DrawTileClear (int x, int y, int w, int h, const char *name);
void	DrawFill (int x, int y, int w, int h, int c);
void	DrawFill2 (int x, int y, int w, int h, unsigned rgba);
void	DrawStretchRaw8 (int x, int y, int w, int h, int cols, int rows, byte *data, unsigned *palette);

void	AppActivate (bool activate);
void	Screenshot (int flags, const char *name);
void	ReloadImage (const char *name);

// drawing colored text in any screen position
void	DrawTextPos (int x, int y, const char *text, unsigned rgba);
void	DrawTextLeft (const char *text, unsigned rgba);
void	DrawTextRight (const char *text, unsigned rgba);

// draw char at (x,y) (char-related coordinates)
void	DrawConChar (int x, int y, int c, int color = C_WHITE);

// lighting
float	GetClientLight (void);		// used by server to determine client visibility (AI); change ??
