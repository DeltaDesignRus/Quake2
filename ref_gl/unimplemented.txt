?? add mean filter for DrawFPS() (ignore dropped frames and long (with FS access) frames)
?! insert entities into BSP draw order (this will remove sorting by entity index and imprive quality of alpha-blended
   entity/world drawing; also: can improve culling -- when occlision will be implemented -- func InEntityVisible() -
   do SphereTrace until any of occupied leafs visible)
! do not render while window is minimized (less CPU usage)

- shaders:
  ! any number of animated textures (see Q2 SP map "lab") -- dynamic allocation, boost MAX_STAGE_TEXTURES
  ? make shader_t.name dynamic allocated (~ basenamed_t)
  ? add shader_t.size -- size of whole structure (with stages)
  ? sky shader: specify color for "gl_fastSky"
  - dynamic tmu count in stage (stage.tmu -> tmu, tmu allocated separately)
  ? size of shader (for clonning by SetShaderLightmap() and for reusing it from deleted shader (temp shaders))
? "gl_fastSky 2" - use "*sky" shader; add color to "*sky" shader
! gl_maxVerts [1..2048] -- used by RB_CheckOverflow()
! correct lightscaling (max_scale = 255/max(r,g,b)) for overbright
? gl_lastValidRenderer (reset all config params ("reset gl_*" ??) if changed; example of value -- "Riva TNT2/SSE")
! overbright of DYNAMIC lightmaps (normal modulated in image.c::Upload()) and model skins

--------- Mandatory ------------
VISIBLE:
- dlights
- models (entities)
  - sprite (.sp2 (Q2) & .spr (HL))
  - md2
    - "outline" effect (quad damage etc.)
    - flashing fx (sometimes rgbGen entity, or 2 shaders: with/without flashing ?)
    - lefthand (weapon model)
    - dynamic lighting (RecursiveLightPoint)
- particles
- rail fx
- screen blending (underwater etc.)
- shadows
* non-transparent water vis bug (merge clusters on map loading? if so, may be useful for water bulge)
INVISIBLE:
- multitexturing (with lightmap lightscale when have multitex. and no env_combine)
! freeing of old images (and "bool temp" or "int usage" flag)
DEBUG:
- r_fullbright, gl_lightmap
- gl_stings (gfxinfo)

--------- Improvements -----------

- optimize sky box drawing:
  - make more than 6 rects (6 * skyTessSize^2)
  - perform fast surface tessalation (need only verts)
- gl_showbboxes, gl_singleShader -> cheat
- vertex lighting:
  - surface simplification + subdivision (!) for complex lightmaps (non-gradient color change) - as option
    (lighting = "lightmap", "vertex", "hq vertex")
- gl_logFile:
  ? remove "GL_" and "gl" prefixes (looks like OpenGL spec)
  ? add error checking after commands (qgl.in: ERROR)
  ?? add profiling (qgl.in: PROFILE)
? make area_t, cluster_t, area.clusterList, cluster.leafList (faster MarkLeafs()/LightPoint())
- gl_overbright:
  - 0-none (force off), 1-"1bit" (force on), 2-"auto" (ON when (vertexLight || multitext. && !env_combine) && fullscreen (??))
  - remove gl_overbrightBits
  - menu selectable
- gl_model:
  - add surfaceFast_t (for use with FastIterator())
- dynamic lightmaps:
  1) upload all at once
  2) make multi-pass shaders (no uploads, RGBGEN_LIGHTSTYLE)
     - lightstyle value is 0..2 (up to double brightness)
     - maps with slow dynamic lightmaps: market, alley1 (look outside world), rc4 (at start point)
? make skins for models with 1 frame to be sh.fast==true (and implement it in AGP memory);
  Problem: how to apply lighting? (and: skins may be dynamically changed from "fast" to "slow")
- triangle models: build lods
? profile uploading (r_speeds, gl_finish 2)
? "screenshort levelshot" -> "levelshot"
? "gl_forceLightmap" (arc, def: "1") -- can disable lighting of alpha/warp surfaces; add option to menu
  (easy implement, but naming problems ...)
- water lightmaps:
  ? try to GENERATE vertex light for water/windows ??
- improve SURF_ALPHA quality on near distances (determine const for checking this requirement?):
  scale (enlarge) texture with keeping alpha = 0 or 255

---------------------------
- inlineModels: RF_TRANSLUCENT/RF2_ALPHA: qglColor4f (1,1,1,0.25)/qglColor4f(1,1,1,1) + blend + no lightmap
  (require entstring preprocessing?)
? what to do with "intens" param in GLimp_SetGamma() ? remove ??
